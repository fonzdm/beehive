apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
    name: harbor
    namespace: registry
spec:
    interval: 1h0m0s
    chart:
        spec:
            chart: harbor
            sourceRef:
                kind: HelmRepository
                name: harbor
    values:
        expose:
            type: ingress
            tls:
                certSource: secret
                auto:
                    commonName: harbor.service.fonzdm.xyz
                secret:
                    secretName: harbor-tls-secret
            ingress:
                hosts:
                    core: harbor.service.fonzdm.xyz
                controller: default
                kubeVersionOverride: ""
                className: nginx
                annotations:
                    ingress.kubernetes.io/ssl-redirect: "true"
                    ingress.kubernetes.io/proxy-body-size: "0"
                    nginx.ingress.kubernetes.io/ssl-redirect: "true"
                    nginx.ingress.kubernetes.io/proxy-body-size: "0"
                    cert-manager.io/cluster-issuer: letsencrypt-cloudflare
                labels: {}
            clusterIP:
                name: harbor
                staticClusterIP: ""
                ports:
                    httpPort: 80
                    httpsPort: 443
                annotations: {}
                labels: {}
            nodePort:
                name: harbor
                ports:
                    http:
                        port: 80
                        nodePort: 30002
                    https:
                        port: 443
                        nodePort: 30003
                annotations: {}
                labels: {}
            loadBalancer:
                name: harbor
                IP: ""
                ports:
                    httpPort: 80
                    httpsPort: 443
                annotations: {}
                labels: {}
                sourceRanges: []
        externalURL: https://harbor.service.fonzdm.xyz
        persistence:
            enabled: true
            resourcePolicy: keep
            persistentVolumeClaim:
                registry:
                    existingClaim: ""
                    storageClass: nas
                    subPath: ""
                    accessMode: ReadWriteMany
                    size: 16Gi
                    annotations: {}
                jobservice:
                    jobLog:
                        existingClaim: ""
                        storageClass: nas
                        subPath: ""
                        accessMode: ReadWriteMany
                        size: 1Gi
                        annotations: {}
                database:
                    existingClaim: ""
                    storageClass: nas
                    subPath: ""
                    accessMode: ReadWriteMany
                    size: 8Gi
                    annotations: {}
                redis:
                    existingClaim: ""
                    storageClass: nas
                    subPath: ""
                    accessMode: ReadWriteMany
                    size: 2Gi
                    annotations: {}
                trivy:
                    existingClaim: ""
                    storageClass: nas
                    subPath: ""
                    accessMode: ReadWriteMany
                    size: 5Gi
                    annotations: {}
            imageChartStorage:
                disableredirect: false
                type: filesystem
                filesystem:
                    rootdirectory: /storage
                azure:
                    accountname: accountname
                    accountkey: ENC[AES256_GCM,data:A/yANAaNvCC0i+LjdN00ELQYC89HBTg=,iv:ssgD+UEhT+ESQTqvNktB2oUurCe4vr3Gu4mTlOGPAJ4=,tag:yc7ckpg8JfDwyD8tQqvtvg==,type:str]
                    container: containername
                    existingSecret: ""
                gcs:
                    bucket: bucketname
                    encodedkey: base64-encoded-json-key-file
                    existingSecret: ""
                    useWorkloadIdentity: false
                s3:
                    region: us-west-1
                    bucket: bucketname
                swift:
                    authurl: https://storage.myprovider.com/v3/auth
                    username: username
                    password: ENC[AES256_GCM,data:l02AMJfxYxE=,iv:4Kd5jFclItqRIfEfZ8lZ2dmx6bvFqL+jEXxxVjZecUw=,tag:8HD+Ou7jrMuf2D6R3lD49A==,type:str]
                    container: containername
                    existingSecret: ""
                oss:
                    accesskeyid: accesskeyid
                    accesskeysecret: ENC[AES256_GCM,data:AjNh/xqywI1ABqsc/go1,iv:ozwuZuksZRPdH8lL6FQjuWq6AAKfC1+sDYKsBJUzkJU=,tag:z/chyTg52Uc0qI3//nQpww==,type:str]
                    region: regionname
                    bucket: bucketname
                    existingSecret: ""
        existingSecretAdminPassword: ""
        existingSecretAdminPasswordKey: HARBOR_ADMIN_PASSWORD
        harborAdminPassword: ENC[AES256_GCM,data:kcfb3rJM94A=,iv:dOqYk5BgCCqnCQvpcrDrSHzD2T+29uxchl/MMZRSv1Q=,tag:Z8tkiS6+Hbfi6+PV1NtGMw==,type:str]
        internalTLS:
            enabled: false
            strong_ssl_ciphers: false
            certSource: auto
            trustCa: ""
            core:
                secretName: ""
                crt: ""
                key: ""
            jobservice:
                secretName: ""
                crt: ""
                key: ""
            registry:
                secretName: ""
                crt: ""
                key: ""
            portal:
                secretName: ""
                crt: ""
                key: ""
            trivy:
                secretName: ""
                crt: ""
                key: ""
        ipFamily:
            ipv6:
                enabled: true
            ipv4:
                enabled: true
        imagePullPolicy: IfNotPresent
        imagePullSecrets: null
        updateStrategy:
            type: RollingUpdate
        logLevel: info
        caSecretName: ""
        secretKey: ENC[AES256_GCM,data:hLrnpCgeiNV6x+Xw+aejmsQsDo/wfbseA/VbgXxVjsQ=,iv:Y1RpgoUUcfAMnInHQ4QgHPpq8OweQsJAb8LZ7wQBVEA=,tag:eQvMuxeRs1PNltMYa2SaZA==,type:str]
        existingSecretSecretKey: ""
        proxy:
            httpProxy: null
            httpsProxy: null
            noProxy: 127.0.0.1,localhost,.local,.internal
            components:
                - core
                - jobservice
                - trivy
        enableMigrateHelmHook: false
        metrics:
            enabled: false
            core:
                path: /metrics
                port: 8001
            registry:
                path: /metrics
                port: 8001
            jobservice:
                path: /metrics
                port: 8001
            exporter:
                path: /metrics
                port: 8001
            serviceMonitor:
                enabled: false
                additionalLabels: {}
                interval: ""
                metricRelabelings: []
                relabelings: []
        trace:
            enabled: false
            provider: jaeger
            sample_rate: 1
            jaeger:
                endpoint: http://hostname:14268/api/traces
            otel:
                endpoint: hostname:4318
                url_path: /v1/traces
                compression: false
                insecure: true
                timeout: 10
        cache:
            enabled: false
            expireHours: 24
        containerSecurityContext:
            privileged: false
            allowPrivilegeEscalation: false
            seccompProfile:
                type: RuntimeDefault
            runAsNonRoot: true
            capabilities:
                drop:
                    - ALL
        nginx:
            image:
                repository: goharbor/nginx-photon
                tag: dev
            serviceAccountName: ""
            automountServiceAccountToken: false
            replicas: 1
            revisionHistoryLimit: 10
            extraEnvVars: []
            nodeSelector: {}
            tolerations: []
            affinity: {}
            topologySpreadConstraints: []
            podAnnotations: {}
            podLabels: {}
            priorityClassName: null
        portal:
            image:
                repository: goharbor/harbor-portal
                tag: dev
            serviceAccountName: ""
            automountServiceAccountToken: false
            replicas: 1
            revisionHistoryLimit: 10
            extraEnvVars: []
            nodeSelector: {}
            tolerations: []
            affinity: {}
            topologySpreadConstraints: []
            podAnnotations: {}
            podLabels: {}
            serviceAnnotations: {}
            priorityClassName: null
            initContainers: []
        core:
            image:
                repository: goharbor/harbor-core
                tag: dev
            serviceAccountName: ""
            automountServiceAccountToken: false
            replicas: 1
            revisionHistoryLimit: 10
            startupProbe:
                enabled: true
                initialDelaySeconds: 10
            extraEnvVars: []
            nodeSelector: {}
            tolerations: []
            affinity: {}
            topologySpreadConstraints: []
            podAnnotations: {}
            podLabels: {}
            serviceAnnotations: {}
            priorityClassName: null
            initContainers: []
            configureUserSettings: null
            # Or redis
            quotaUpdateProvider: db
            secret: ""
            existingSecret: ""
            secretName: ""
            tokenKey: ""
            tokenCert: ""
            xsrfKey: ""
            existingXsrfSecret: ""
            existingXsrfSecretKey: CSRF_KEY
            artifactPullAsyncFlushDuration: null
            gdpr:
                deleteUser: false
                auditLogsCompliant: false
        jobservice:
            image:
                repository: goharbor/harbor-jobservice
                tag: dev
            serviceAccountName: ""
            automountServiceAccountToken: false
            replicas: 1
            revisionHistoryLimit: 10
            extraEnvVars: []
            nodeSelector: {}
            tolerations: []
            affinity: {}
            topologySpreadConstraints: null
            podAnnotations: {}
            podLabels: {}
            priorityClassName: null
            initContainers: []
            maxJobWorkers: 10
            jobLoggers:
                - file
            #days
            loggerSweeperDuration: 14
            notification:
                webhook_job_max_retry: 3
                # in seconds
                webhook_job_http_client_timeout: 3
            reaper:
                max_update_hours: 24
                max_dangling_hours: 168
            secret: ""
            existingSecret: ""
            existingSecretKey: JOBSERVICE_SECRET
        registry:
            registry:
                image:
                    repository: goharbor/registry-photon
                    tag: dev
                extraEnvVars: []
            controller:
                image:
                    repository: goharbor/harbor-registryctl
                    tag: dev
                extraEnvVars: []
            serviceAccountName: ""
            automountServiceAccountToken: false
            replicas: 1
            revisionHistoryLimit: 10
            nodeSelector: {}
            tolerations: []
            affinity: {}
            topologySpreadConstraints: []
            podAnnotations: {}
            podLabels: {}
            priorityClassName: null
            initContainers: []
            secret: ""
            existingSecret: ""
            existingSecretKey: REGISTRY_HTTP_SECRET
            relativeurls: false
            credentials:
                username: harbor_registry_user
                password: ENC[AES256_GCM,data:pzl8ZaMjSGwjMHWyFH741alGStK3K/QZ,iv:jsHm4bj51MQibvUXV3h9iJvi2i1aXBqRB0TA2xclu3E=,tag:nT28Dua3GbjVPm8bqjJ7Xw==,type:str]
                existingSecret: ""
                htpasswdString: ""
            middleware:
                enabled: false
                type: cloudFront
                cloudFront:
                    baseurl: example.cloudfront.net
                    keypairid: KEYPAIRID
                    duration: 3000s
                    ipfilteredby: none
                    privateKeySecret: my-secret
            upload_purging:
                enabled: true
                age: 168h
                interval: 24h
                dryrun: false
        trivy:
            enabled: true
            image:
                repository: goharbor/trivy-adapter-photon
                tag: dev
            serviceAccountName: ""
            automountServiceAccountToken: false
            replicas: 1
            resources:
                requests:
                    cpu: 200m
                    memory: 512Mi
                limits:
                    cpu: 1
                    memory: 1Gi
            extraEnvVars: []
            nodeSelector: {}
            tolerations: []
            affinity: {}
            topologySpreadConstraints: []
            podAnnotations: {}
            podLabels: {}
            priorityClassName: null
            initContainers: []
            debugMode: false
            vulnType: os,library
            severity: UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL
            ignoreUnfixed: false
            insecure: false
            gitHubToken: ""
            skipUpdate: false
            skipJavaDBUpdate: false
            offlineScan: false
            securityCheck: vuln
            timeout: 5m0s
        database:
            type: internal
            internal:
                image:
                    repository: goharbor/harbor-db
                    tag: dev
                serviceAccountName: ""
                automountServiceAccountToken: false
                livenessProbe:
                    timeoutSeconds: 1
                readinessProbe:
                    timeoutSeconds: 1
                extraEnvVars: []
                nodeSelector: {}
                tolerations: []
                affinity: {}
                priorityClassName: null
                extrInitContainers: []
                password: ENC[AES256_GCM,data:j3ythToz1gU=,iv:oRnweETAcC+FOyTc36pWuZMR1OvL3lVgA/y/M15TVlQ=,tag:ouxtKWNWRwhEYY3O/os5Vg==,type:str]
                shmSizeLimit: 512Mi
                initContainer:
                    migrator: {}
                    permissions: {}
            external:
                host: 192.168.0.1
                port: "5432"
                username: user
                password: ENC[AES256_GCM,data:hnC9jkwGLgs=,iv:5b1hMwgxjtpQJXyGPJTdGWQ2yLk4fV9fSCWd9bNo/kY=,tag:oTa3pnGSPnSC/u1nFepccQ==,type:str]
                coreDatabase: registry
                existingSecret: ""
                sslmode: disable
            maxIdleConns: 100
            maxOpenConns: 900
            podAnnotations: {}
            podLabels: {}
        redis:
            type: internal
            internal:
                image:
                    repository: goharbor/redis-photon
                    tag: dev
                serviceAccountName: ""
                automountServiceAccountToken: false
                extraEnvVars: []
                nodeSelector: {}
                tolerations: []
                affinity: {}
                priorityClassName: null
                initContainers: []
                jobserviceDatabaseIndex: "1"
                registryDatabaseIndex: "2"
                trivyAdapterIndex: "5"
            external:
                addr: 192.168.0.2:6379
                sentinelMasterSet: ""
                tlsOptions:
                    enable: false
                coreDatabaseIndex: "0"
                jobserviceDatabaseIndex: "1"
                registryDatabaseIndex: "2"
                trivyAdapterIndex: "5"
                username: ""
                password: ""
                existingSecret: ""
            podAnnotations: {}
            podLabels: {}
        exporter:
            image:
                repository: goharbor/harbor-exporter
                tag: dev
            serviceAccountName: ""
            automountServiceAccountToken: false
            replicas: 1
            revisionHistoryLimit: 10
            extraEnvVars: []
            podAnnotations: {}
            podLabels: {}
            nodeSelector: {}
            tolerations: []
            affinity: {}
            topologySpreadConstraints: []
            priorityClassName: null
            cacheDuration: 23
            cacheCleanInterval: 14400
sops:
    age:
        - recipient: age1fcyhrk0yse8cx49cq398z2uaewp3vxzqek5uph0usgsthzvspppqjp7dru
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBaZzZmNEhwZDA5MUV4bFhW
            d2FhVlpveXFYN05NbkhhNEpGcXYzbzNuRXdNCk9Ib3oyajdiMjBtNzdrd25CVktV
            RVFEa2NOTDVsTFNoMFEvaXF4UDgzTjQKLS0tIEJlZjh4S2lYdGlSaVAvdDRvbnRL
            YXV2NHlNcW9wU0FPbFR5Vjl1TkxDNkkKwhXkm2Op+6tgPRxhULT2wMGOZ0uez+gb
            X41ZKdpTHkAKGgctcsYvCn2LdwIVoIAP4K7+sF/uIu3pxGd7RF+A0A==
            -----END AGE ENCRYPTED FILE-----
    lastmodified: "2025-09-03T15:06:53Z"
    mac: ENC[AES256_GCM,data:jly0wCedmLOls3CIOGvlAOzyYqz8YRAXPUzaDl5SxSRBaGgCHmPkDCQZXQiXJYOHjJIDEIPzRS/+GuhWLfxwcjJmu6iPV1kUKIDEk0QOg+k4NkFJwhRDi6hoXFVg+MX22k1oe5bzuLYD43I4oazc8UnEHwUF2c/H7aYPa1msBJQ=,iv:qcG4CdMClrAYk4rp0RgPREn+kUnOuAB79+mzrWzX6ZM=,tag:USrd8YuLEDVUZzZc9PvCgQ==,type:str]
    encrypted_regex: ^(harborAdminPassword|password|secretKey|accountkey|accesskeysecret)$
    version: 3.10.2
